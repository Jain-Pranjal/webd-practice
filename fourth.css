body{
    background-color: gray;
    
}
::selection{
    background-color: blueviolet;
}
*{
    margin: 0;
    padding: 0;
}

/* we declare the global variable inside the root that is accessed anywhere */
/* all these are used for msking the brand color template  */
:root{
    --primary-color: rgb(12, 245, 47);
    --secondary:rgb(198, 183, 20);
    --secondary:rgb(0, 167, 176);
    --defpad:25px;
    
}
p,span.var1,h3.var2{
    --secondary:rgb(243, 149, 149);
    color: var(--secondary,brown);
    padding: var(--defpad);
    /* we can aslo overwrite the variable here by makin it local variable  */
}
/* for the local  variable making we have to do the changes inside the style of the particular one only  */


/* media query  */
@media only screen and (max-width:555px){
    body{
        background-color: blue;
    }
}

@media only screen and (min-width:325px){
    body{
        background-color:#262520;
    }
}

/* MULTI COLOR NAV BAR */

/* give thw width full for the responsieness of the site   */
/* 
:root{
    --primary-bg:gray;
    --primary-text:black;
    
}

.multi{
    width: 100vw;
    height: 3.5rem;
    background-color: var(--primary-bg);
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 15px;
    box-sizing: border-box;
}
ul{
    display: flex;
    justify-content: end;
    align-items: center;
}

ul>li{
    color: var(--primary-text);
    padding: 19px;
    list-style: none;
    cursor: pointer;
}

ul>li:hover{
    font-weight: bold;
}
*/

/* now we can select the universal prop inside the any container */
/* 
.boxes *{
    width: 50px;
    height: 50px;
    background-color: blue;
    margin: 5px;
}

.box:nth-child(odd){
    background-color: pink;
}
.boxes::before{
    color: white;
    content: "pranjal jain is writing before";
}

.boxes::after{
    color: white;
    content: "pranjal jain is writing after";
    
}

.box::first-letter{
    background-color: coral;
}

.var2::first-letter{
    text-transform: scale(1);
}
*/

h1,h2,h3{
    color: white;
}


.container {
    border: 2px solid red;
    display: flex;
    height: 80vh;
    display: flex;
    align-items: center;
    justify-content: center;
    flex-direction: row;
    flex-wrap: wrap;
    /* aslo use the gap prop inside the container prop */
}

.item {  
    /* flex-grow: 1; */
    height: 92px;
    width: 92px;
    border: 2px solid black;
    /* margin: 4px; */
    background-color: blueviolet;
    flex-grow:1;
}

/* all the items are laid to the flex direction  */

.order-1{
    order: 1;
}

/* so maximum order will make the item to be present at the last   */

.flex-grow{
    /* flex-grow:2; */
    flex-grow: 2;
}


/* 
.nav{
    display: flex;
    color: white;
    justify-content: start;
    align-items: end;
    box-sizing: border-box;
}
nav{
    width: 100%;
    height: 3.5rem;
    background-color: rgb(12, 164, 164);
}


.layout{
    position: sticky;
    top: 0px;
    backdrop-filter: blur(10px);
}
li{
    list-style: none;
    margin: 15px;
    cursor: pointer;
    font-size: 20px;
}

.cont{
    margin: 12px;
    height: 110vh;
    background-color: cornflowerblue;
    display: flex;
    justify-content: space-around;
}

.footer{
    background-color: violet;
    width: 100%;
    height: 3.5rem;
    
}
.orange-box {
    width: 32px;
    background: orange;
    position: fixed;
    bottom: 12px;
    right: 23px;
    border-radius: 60px;
}

.item{  
    height: 32px;
    height: 338px;
    width: 192px;
    border: 2px solid black;
    margin: 14px;
    background-color: blueviolet;
}

*/


/* making of the nav bar  */

/* 
.header{
    position: sticky;
    top: 0px;
}
.logo img{
    margin-left: 40px;
    width: 180px;
    height: 55px;
}
nav{
    background-color: bisque;
    height: 16vh;
    display: flex;
    align-items: center;
    justify-content: space-around;
 
}

ul{
    display: flex;
    align-items: center;
    justify-content: end;
}
li{
    list-style: none;
    font-family: 'Poppins', sans-serif;
    margin: 15px;
    cursor: pointer;
    font-size: 20px;
}
*/

/* GRIDS */
.cont {
    width: 80vw;
    height: 100vh;
    border: 2px solid black;
    display: grid;
    grid-template-columns: 155px 190px;
    grid-template-rows: 55px 99px;
    
}
.items {
    border: 2px solid red;
    height: 55px;
    width: 55px;
}


/* css trasnform  */
/* 
.box {
    height: 50px;
    width: 50px;
    background-color: beige;
    border: 2px solid black;
    display: flex;
    justify-content: center;
    align-items: center; */
    /* transform: rotate(0.125turn); */
    /* transform-origin: -50% -50%; */
    /* transform: rotateZ(9deg); */
    /* transform: skewY(34deg); */
    /* transform: translateY(100%) skewX(40deg) translateX(45%); */
    /* 
    transform: rotate(190deg);
    transform: rotate(10.125turn);
    transform: rotateX(91deg);
    transform: scale(1.5); */
    
    
    /* } */
    /* 
    .container {
        margin: 55px;
        width: 100vw;
        height: 80vh;
        border: 2px solid purple;
    }
    */
    
    
    /* transition property */
    /* 
    .container {
        margin: 55px;
        width: 100vw;
        height: 80vh;
        border: 2px solid purple;
        background-color: aquamarine;
    }
    
    .box {
        height: 50px;
        width: 50px;
        background-color: beige;
        border: 2px solid black;
        display: flex;
        justify-content: center;
        align-items: center;
        transition-property: all;
        transition-duration: 1.5s;
        transition-timing-function: ease-in;
        transition-delay: 1s;
        background-color: burlywood;
    }
    
    .tr{
        transform: translateX(90%) scale(1.5);
        background-color: red;
        font-weight: bolder;
        
    }
    */
    
    
    /* Animation */
    
    .container {
        margin: 55px;
        width: 100vw;
        height: 80vh;
        border: 2px solid purple;
        background-color: aquamarine;
    }
    
    .box {
        height: 50px;
        width: 50px;
        background-color: beige;
        border: 2px solid black;
        display: flex;
        justify-content: center;
        align-items: center;
        animation: pranjalanimation 1s ease-in 1s infinite  ;
        /* animation: name duration timing-function delay iteration-count direction fill-mode; */
        animation-direction: alternate;
    }
    
    
    @keyframes pranjalanimation{
        
        to{
            transform: translateX(500px) scale(1.5);
        }
    }
    
    
    
    .ball{
        height: 150px;
        width: 150px;
        border: 2px solid red;
        background-color: rgb(85, 0, 255);
        display: flex;
        justify-content: center;
        align-items: center;
        border-radius: 100%;
        animation: BallAnimation 0.2s ease-in 0.5s infinite alternate backwards;
        /* animation: rotation 2s ease-out 1s infinite alternate; */
}


@keyframes BallAnimation {
    from{
        /* transform: translateY(150px); */
        background-color: orange;
    }
    to{
        transform: translateY(50px);
        background-color: lime;
    }
}


/* also we can have the keyframes by ssing the %  */
@keyframes rotation {
    0%{
        transform: rotate(72deg);
    }
    20%{transform: rotate(72deg);}
    40%{transform: rotate(72deg);}
    60%{transform: rotate(72deg);}
    80%{transform: rotate(72deg);}
    100%{transform: rotate(72deg);}
    
}


.parent{
        margin: 15px;
        width: 100vw;
        height: 80vh;
        border: 2px solid purple;
        background-color: aquamarine;
        position: absolute;
}

.football{
        height: 150px;
        width: 150px;
        border: 2px solid red;
        background-color: rgb(85, 0, 255);
        display: flex;
        justify-content: center;
        align-items: center;
        border-radius: 100%;
        position: absolute;
        bottom: 0px;
        animation: animatex 3s linear infinite  ,
         animatey 0.5s ease-out 1s infinite alternate 
        ;
}


@keyframes xtranslate{
    0% {transform: translateX(100px);}
    20% {transform: translateX(100px);}
    40% {transform: translateX(100px);}
    60% {transform: translateX(100px);}
    80% {transform: translateX(100px);}
    100% {transform: translateX(100px);}
}



@keyframes example {
    0%   {background-color:red; left:0px; top:0px;}
    25%  {background-color:yellow; left:200px; top:0px;}
    50%  {background-color:blue; left:200px; top:200px;}
    75%  {background-color:green; left:0px; top:200px;}
    100% {background-color:red; left:0px; top:0px;}
  }


  @keyframes animatex{
    from{
        left:0;
    }
    to{
        left: 100%;
    }
  }
  @keyframes animatey{
    from{
        bottom:0;
    }
    to{
        bottom: 100%;
    }
  }

/* in the  objectt fit cover ther eis a break of the space in the image and we cna controll which part of image we want inside the cover as cver will occupy the whole size of the image height and width  */

.object{
    height: 250px;
    width: 250px;
    object-fit: cover;
    border: 2px solid red;
    object-position: top right;
}


.box1{
    background-image: url("https://media.istockphoto.com/id/1433211776/photo/woman-silhouette-in-front-of-the-ocean-at-sunset.webp?b=1&s=170667a&w=0&k=20&c=xGzw_4wTjK0uKJLS42lR7xPsD7tGRTrx-mWBl0ylih4=");
    background-repeat: no-repeat;
    background-position: center center;
    /* this will specify what par to of th eimage u want to see in the background of the container */
    border: 2px solid red;
    height: 550px;
    width: 550px;
    filter: invert(1);

}


.container img{
    /* filter: blur(10px); */
    /* filter: brightness(120%); */
    filter: brightness(120%) contrast(180%);
    filter: sepia(50%);
}

/* for the multiple prop separte them by space */
