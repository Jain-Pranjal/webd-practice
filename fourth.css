body{
    background-color: gray;
    
}
::selection{
    background-color: blueviolet;
}
*{
    margin: 0;
    padding: 0;
}

/* we declare the global variable inside the root that is accessed anywhere */
/* all these are used for msking the brand color template  */
:root{
    --primary-color: rgb(12, 245, 47);
    --secondary:rgb(198, 183, 20);
    --secondary:rgb(0, 167, 176);
    --defpad:25px;
    
}
p,span.var1,h3.var2{
    --secondary:rgb(243, 149, 149);
    color: var(--secondary,brown);
    padding: var(--defpad);
    /* we can aslo overwrite the variable here by makin it local variable  */
}
/* for the local  variable making we have to do the changes inside the style of the particular one only  */


/* media query  */
@media only screen and (max-width:555px){
    body{
        background-color: blue;
    }
}

@media only screen and (min-width:325px){
    body{
        background-color:#262520;
    }
}

/* MULTI COLOR NAV BAR */

/* give thw width full for the responsieness of the site   */
/* 
:root{
    --primary-bg:gray;
    --primary-text:black;
    
}

.multi{
    width: 100vw;
    height: 3.5rem;
    background-color: var(--primary-bg);
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 15px;
    box-sizing: border-box;
}
ul{
    display: flex;
    justify-content: end;
    align-items: center;
}

ul>li{
    color: var(--primary-text);
    padding: 19px;
    list-style: none;
    cursor: pointer;
}

ul>li:hover{
    font-weight: bold;
}
*/

/* now we can select the universal prop inside the any container */
/* 
.boxes *{
    width: 50px;
    height: 50px;
    background-color: blue;
    margin: 5px;
}

.box:nth-child(odd){
    background-color: pink;
}
.boxes::before{
    color: white;
    content: "pranjal jain is writing before";
}

.boxes::after{
    color: white;
    content: "pranjal jain is writing after";
    
}

.box::first-letter{
    background-color: coral;
}

.var2::first-letter{
    text-transform: scale(1);
}
*/

h1,h2,h3{
    color: white;
}


.container {
    border: 2px solid red;
    display: flex;
    height: 80vh;
    display: flex;
    align-items: center;
    justify-content: center;
    flex-direction: row;
    flex-wrap: wrap;
    /* aslo use the gap prop inside the container prop */
}

.item {  
    /* flex-grow: 1; */
    height: 92px;
    width: 92px;
    border: 2px solid black;
    /* margin: 4px; */
    background-color: blueviolet;
    flex-grow:1;
}

/* all the items are laid to the flex direction  */

.order-1{
    order: 1;
}

/* so maximum order will make the item to be present at the last   */

.flex-grow{
    /* flex-grow:2; */
    flex-grow: 2;
}

.nav{
    display: flex;
    color: white;
    justify-content: start;
    align-items: end;
    box-sizing: border-box;
}
nav{
    width: 100%;
    height: 3.5rem;
    background-color: rgb(12, 164, 164);
}


.layout{
    position: sticky;
    top: 0px;
    /* filter: blur(5px); */
    backdrop-filter: blur(10px);
}
li{
    list-style: none;
    margin: 15px;
    cursor: pointer;
    font-size: 20px;
}

.cont{
    margin: 12px;
    height: 110vh;
    background-color: cornflowerblue;
    display: flex;
    justify-content: space-around;
}

.item{  
    /* flex-grow: 1; */
    height: 338px;
    width: 192px;
    border: 2px solid black;
    margin: 14px;
    background-color: blueviolet;
    /* flex-grow:1; */
}

.footer{
    background-color: violet;
    width: 100%;
    height: 3.5rem;
    
}
.orange-box {
    height: 32px;
    width: 32px;
    background: orange;
    position: fixed;
    bottom: 12px;
    right: 23px;
    border-radius: 60px;}